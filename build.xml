<?xml version="1.0" encoding="UTF-8"?>
<project name="screenshot" default="deploy">

    <property file="build.properties"/>

    <property name="compile.dir" value="classes"/>
    <property name="release.dir" value="releases"/>
    <property name="deploy.dir" value="deploy"/>
    <property name="keystore" value="keystore/testKeystore"/>

    <target name="clean">
        <delete dir="${compile.dir}"/>
    </target>

    <macrodef name="compile">
        <attribute name="props" default="dev.properties"/>
        <sequential>
            <mkdir dir="${compile.dir}"/>
            <javac destdir="${compile.dir}" srcdir="src" classpath="lib/picasaweb-uber.jar"/>
            <copy todir="${compile.dir}" file="resources/icon.png"/>
            <copy file="@{props}" filtering="true"
                  tofile="${compile.dir}/screenshot.properties">
                <filterset>
                    <filtersfile file="build.properties"/>
                </filterset>
            </copy>
        </sequential>
    </macrodef>

    <target name="jarnik">
        <jar destfile="${deploy.dir}/screenshot.jar" basedir="${compile.dir}">
            <manifest>
                <attribute name="Main-Class" value="com.screenshot.Main"/>
            </manifest>
            <zipfileset src="lib/picasaweb-uber.jar"/>
        </jar>
        <signjar jar="${deploy.dir}/screenshot.jar"
                 alias="testAlias" storepass="testpwd" keystore="${keystore}"/>
    </target>

    <macrodef name="artifacts">
        <attribute name="filter" default="dev.properties"/>
        <sequential>
            <copy todir="${deploy.dir}" filtering="false">
                <fileset dir="resources">
                    <exclude name="screenshot.jnlp"/>
                </fileset>
            </copy>
            <copy file="resources/screenshot.jnlp" filtering="true"
                  tofile="${deploy.dir}/screenshot.jnlp">
                <filterset>
                    <filtersfile file="@{filter}"/>
                    <filtersfile file="build.properties"/>
                </filterset>
            </copy>
        </sequential>
    </macrodef>
    
    <target name="build" depends="clean">
        <compile props="dev.properties"/>
    </target>

    <target name="deploy" depends="build">
        <delete dir="${deploy.dir}"/>
        <ant target="jarnik"/>
        <artifacts filter="dev.properties"/>
    </target>

    <target name="release" depends="clean">
        <delete dir="${deploy.dir}"/>
        <compile props="release.properties"/>
        <ant target="jarnik"/>
        <artifacts filter="release.properties"/>
        <ant target="exe-create"/>
        <tar destfile="${deploy.dir}/screenshot.tar" basedir="${deploy.dir}"/>
        <gzip destfile="${release.dir}/screenshot-${version}.tar.gz" src="${deploy.dir}/screenshot.tar"/>
    </target>

    <!-- exe/readme.txt -->
    
    <target name="exe-create">
        <exec command="${jsmooth_path}\jsmoothcmd.exe exe\screenshot.jsmooth"/>
    </target>

    <target name="exe-setup">
        <exec command="${jsmooth_path}\jsmoothgen.exe exe\screenshot.jsmooth"/>
    </target>

</project>