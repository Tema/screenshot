<?xml version="1.0" encoding="UTF-8"?>
<project name="screenshot" default="deploy">

    <property file="build.properties"/>

    <property name="compile.dir" value="classes"/>
    <property name="release.dir" value="releases"/>
    <property name="keystore" value="keystore/testKeystore"/>

    <target name="clean">
        <delete dir="${compile.dir}"/>
        <delete dir="${deploy.dir}"/>
    </target>

    <target name="compile">
        <mkdir dir="${compile.dir}"/>
        <javac destdir="${compile.dir}" srcdir="src" classpath="lib/picasaweb-uber.jar"/>
        <copy todir="${compile.dir}" file="resources/icon.png"/>
    </target>

    <macrodef name="jarnik">
        <attribute name="props" default="dev.properties"/>
        <sequential>
            <jar destfile="${deploy.dir}/screenshot.jar" basedir="${compile.dir}">
                <manifest>
                    <attribute name="Main-Class" value="com.screenshot.Main"/>
                </manifest>
                <zipfileset src="lib/picasaweb-uber.jar"/>
                <zipfileset dir="." includes="@{props}" fullpath="screenshot.properties"/>
            </jar>
            <signjar jar="${deploy.dir}/screenshot.jar"
                     alias="testAlias" storepass="testpwd" keystore="${keystore}"/>
        </sequential>
    </macrodef>

    <macrodef name="artifacts">
        <attribute name="filter" default="dev.properties"/>
        <sequential>
            <copy todir="${deploy.dir}" filtering="false">
                <fileset dir="resources">
                    <exclude name="screenshot.jnlp"/>
                </fileset>
            </copy>
            <copy file="resources/screenshot.jnlp" filtering="true"
                  tofile="${deploy.dir}/screenshot.jnlp">
                <filterset>
                    <filtersfile file="@{filter}"/>
                    <filtersfile file="build.properties"/>
                </filterset>
            </copy>
        </sequential>
    </macrodef>

    <target name="build" depends="clean, compile">
        <jarnik props="dev.properties"/>
    </target>

    <target name="deploy" depends="build">
        <artifacts filter="dev.properties"/>
    </target>

    <target name="release" depends="clean, compile">
        <jarnik props="release.properties"/>
        <artifacts filter="release.properties"/>
        <tar destfile="${deploy.dir}/screenshot.tar" basedir="${deploy.dir}"/>
        <gzip destfile="${release.dir}/screenshot.tar.gz" src="${deploy.dir}/screenshot-@{version}.tar"/>
    </target>

</project>